generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model User {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  role      Role      @default(BASIC)
  orders    Order[]
  sessions  Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model SizeColor {
  id     String      @id @default(uuid())
  amount Int
  name   String
  size   ProductSize @relation(fields: [sizeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sizeId String

  @@unique([sizeId, name])
}

model ProductSize {
  id        String      @id @default(uuid())
  size      String
  colors    SizeColor[]
  product   Product     @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String
}

model Product {
  id          String         @id @default(uuid())
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  name        String
  description String
  image       String?
  gender      String[]
  category    String[]
  subcategory String[]
  price       Int
  sales       Int            @default(0)
  totalStock  Int            @default(0)
  sizes       ProductSize[]
  onSale      Boolean        @default(false)
  onSeasonal  Boolean        @default(false)
  orders      OrderProduct[]
}

model Order {
  id        String         @id @default(uuid())
  createdAt DateTime       @default(now())
  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  products  OrderProduct[]
}

model OrderProduct {
  id        String  @id @default(uuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

enum Role {
  BASIC
  EDITOR
  SUPER
  ADMIN
}

model CategorySettings {
  id       String @id @default(uuid())
  category String
  image    String
}

model HomepageSettings {
  id         String   @id @default(uuid())
  categories String[]
  sale       Boolean
  saleText   String?
  image      String?
}

model NavbarSettings {
  id         String   @id @default(uuid())
  categories String[]
}

model SidebarSettings {
  id    String @id @default(uuid())
  image String
}

model AboutSettings {
  id    String @id @default(uuid())
  image String
}
